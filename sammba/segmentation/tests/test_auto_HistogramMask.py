# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from sammba.segmentation.interfaces import HistogramMask


def test_HistogramMask_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    in_file=dict(mandatory=True,
    ),
    intensity_threshold=dict(),
    out_file=dict(
    name_template='%s_histo_mask',
    name_source='in_file',
    keep_extension=True),
    volume_threshold=dict(usedefault=True),
    terminal_output=dict(nohash=True),
    lower_cutoff=dict(usedefault=True),
    upper_cutoff=dict(usedefault=True),
    connected=dict(usedefault=True),
    opening=dict(usedefault=True),
    closing=dict(usedefault=True),
    dilation_size=dict(usedefault=True),
    verbose=dict(usedefault=True),)
    inputs = HistogramMask.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value


def test_HistogramMask_outputs():
    output_map = dict(out_file=dict(),
    )
    outputs = HistogramMask.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value
