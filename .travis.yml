dist: trusty
sudo: required

language: python

virtualenv:
  system_site_packages: true

env:
  global:
    - TEST_RUN_FOLDER="/tmp" # folder where the tests are run from

matrix:
  # Do not wait for the allowed_failures entry to finish before
  # setting the status
  fast_finish: true
  allow_failures:
    # allow_failures seems to be keyed on the python version
    - python: 2.7
  include:
    # Ubuntu 14.04 version without matplotlib
    - env: DISTRIB="conda" PYTHON_VERSION="2.7"
           NUMPY_VERSION="1.8.2" SCIPY_VERSION="0.13.3"
           SCIKIT_LEARN_VERSION="0.15.0" COVERAGE="true"
           PANDAS_VERSION="0.13.0" NETWORKX_VERSION="*"
           PACKAGING_VERSION="*" CONFIGPARSER_VERSION="*"
           FUTURE_VERSION="0.16.0" TRAITS_VERSION="4.6"
           SIMPLEJSON_VERSION="3.8.0" PROV_VERSION="1.5.0"
           FUNCSIGS_VERSION="*" CLICK_VERSION="6.6.0" TQDM_VERSION="4.19.5"
    # Neurodebian on Ubuntu 14.04
    - dist: trusty
      env: DISTRIB="neurodebian" PYTHON_VERSION="2.7"
    # Trying to get as close to the minimum required versions while
    # still having the package version available through conda
    - env: DISTRIB="conda" PYTHON_VERSION="2.7"
           NUMPY_VERSION="1.8.2" SCIPY_VERSION="0.13.3"
           SCIKIT_LEARN_VERSION="0.15.0" MATPLOTLIB_VERSION="1.3.1"
           NIBABEL_VERSION="1.2.0" PANDAS_VERSION="0.13.0"
           NETWORKX_VERSION="*" COVERAGE="true"
           PACKAGING_VERSION="*" CONFIGPARSER_VERSION="*"
           FUTURE_VERSION="0.16.0" TRAITS_VERSION="4.6"
           SIMPLEJSON_VERSION="3.8.0" PROV_VERSION="1.5.0"
           FUNCSIGS_VERSION="*" CLICK_VERSION="6.6.0" TQDM_VERSION="4.19.5"
    # Python 3.4 with intermediary versions
    - env: DISTRIB="conda" PYTHON_VERSION="3.4"
           NUMPY_VERSION="1.8.2" SCIPY_VERSION="0.14.0"
           SCIKIT_LEARN_VERSION="0.15.2" MATPLOTLIB_VERSION="1.4.0"
           PANDAS_VERSION="*" PATSY_VERSION="*" NETWORKX_VERSION="*"
           FUTURE_VERSION="0.16.0" PACKAGING_VERSION="*"
           TRAITS_VERSION="4.6" SIMPLEJSON_VERSION="3.8.0"
           PROV_VERSION=="1.5.0" FUNCSIGS_VERSION="*"
           CLICK_VERSION="6.6.0"
    # Most recent versions (Python 3)
    - env: DISTRIB="conda" PYTHON_VERSION="3.5"
           NUMPY_VERSION="*" SCIPY_VERSION="*"
           SCIKIT_LEARN_VERSION="*" MATPLOTLIB_VERSION="*" COVERAGE="true"
           PANDAS_VERSION="*" NETWORKX_VERSION="*"
           FUTURE_VERSION="0.16.0" PACKAGING_VERSION="*"
           TRAITS_VERSION="4.6" SIMPLEJSON_VERSION="3.8.0"
           PROV_VERSION="1.5.0" FUNCSIGS_VERSION="*"
           CLICK_VERSION="6.6.0" TQDM_VERSION="4.19.5"

install:
    - source continuous_integration/install.sh

before_script:
    - make clean

script:
    - python continuous_integration/show-python-packages-versions.py
    # Copy setup.cfg to TEST_RUN_FOLDER where we are going to run the tests from
    # Mainly for nose config settings
    - cp setup.cfg "$TEST_RUN_FOLDER"
    # We want to back out of the current working directory to make
    # sure we are using nistats installed in site-packages rather
    # than the one from the current working directory
    # Parentheses (run in a subshell) are used to leave
    # the current directory unchanged
    - (cd "$TEST_RUN_FOLDER" && make -f $OLDPWD/Makefile test-code)

after_success:
    # Ignore coveralls failures as the coveralls server is not very reliable
    # but we don't want travis to report a failure in the github UI just
    # because the coverage report failed to be published.
    # coveralls need to be run from the git checkout
    # so we need to copy the coverage results from TEST_RUN_FOLDER
- if [[ "$COVERAGE" == "true" ]]; then cp "$TEST_RUN_FOLDER/.coverage" .; coveralls || echo "failed"; fi
